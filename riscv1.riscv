# Operações aritméticas e lógicas básicas em assembly RISC-V

.data
prompt:
prompt2:
prompt3:

.text
.globl _start

# Função para ler um número inteiro do terminal
read_int:
    li a0, 4          # syscall para imprimir prompt
    ecall

    li a7, 5          # syscall para ler inteiro
    ecall
    ret

# Função para imprimir um valor inteiro
print_int:
    li a0, 1          # syscall para imprimir inteiro
    ecall
    ret

_start:
    # Pedir ao usuário para digitar o primeiro número
    la a1, prompt
    jal ra, read_int
    mv t0, a0         # Armazenar o primeiro número em t0 (a)

    # Pedir ao usuário para digitar o segundo número
    la a1, prompt2
    jal ra, read_int
    mv t1, a0         # Armazenar o segundo número em t1 (b)

    # Pedir ao usuário para digitar o terceiro número
    la a1, prompt3
    jal ra, read_int
    mv t2, a0         # Armazenar o terceiro número em t2 (c)

    # Operações aritméticas básicas
    add t3, t0, t1    # Soma de a e b
    sub t4, t0, t1    # Subtração de a e b

    # Operações lógicas básicas
    and t5, t0, t1    # AND entre a e b
    or t6, t0, t1     # OR entre a e b
    xor t7, t0, t1    # XOR entre a e b

    # Máscara entre c e 31
    li t8, 31
    and t9, t2, t8    # Máscara entre c e 31

    # Deslocamento à esquerda de a
    sll t10, t0, 2    # Deslocamento à esquerda de a por 2 bits (valor arbitrário)

    # Deslocamento à direita de b
    srl t11, t1, 2    # Deslocamento à direita de b por 2 bits (valor arbitrário)

    # Imprimir os resultados
    la a1, prompt
    jal ra, print_int
    mv a0, t3         # Imp
