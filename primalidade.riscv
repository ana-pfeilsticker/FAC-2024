.data
primo:
	.string"sim\n"
naoPrimo:
	.string"nao\n"
invalido:
	.string"Entrada invalida.\n"
	
.text

main: 
	li a7, 5
	ecall
	mv t0, a0
	blez t0, printa_invalido
	li t4, 1
	li t3, 2
	div t1, t0, t3 #pegando t1 como a divisão do número por 2
	beq t1, t4, printa_primo
	j confere_primo
	
confere_primo:
	rem t2, t0, t1
	beqz t2, printa_naoPrimo
	addi t1, t1, -1
	li t3, 1
	beq t1, t3, printa_primo
	j confere_primo

printa_primo:
	li a0, 1
	la a1, primo
	li a2, 4
	li a7, 64
	ecall 
	j end
	
printa_naoPrimo:
	li a0, 1
	la a1, naoPrimo
	li a2, 4
	li a7, 64
	ecall 
	j end
	
printa_invalido:
	li a0, 1
	la a1, invalido
	li a2, 18
	li a7, 64
	ecall 
	j end

end: 

	li a7, 10
	ecall