.data
endofline: .string "\n"

.text
.globl _start

_start:

    # Leitura do número de entradas
    li a7, 5            
    ecall
    mv t0, a0    

    # Leitura do primeiro número
    li a7, 5            
    ecall
    mv t1, a0    
    addi t0, t0, -1
    

verificamaior:

    li a7, 5            
    ecall
    mv t2, a0         

    # Verifica se o número atual é maior que o maior número encontrado até agora
    bge t2, t1, troca   # Se t2 for maior ou igual a t1, chama a função troca
    j next       

troca:
    mv t1, t2           # Atualiza o maior valor para o número atual

next:
    addi t0, t0, -1     # Decrementa o contador de números restantes
    bnez t0, verificamaior  # Se t0 for diferente de 0, volta para o loop

    # Printa o maior número encontrado após o término do looping
    li a7, 1           
    mv a0, t1           
    ecall

    li a0, 1           
    la a1, endofline   
    li a2, 1            
    li a7, 64           
    ecall

    li a7, 10           
    ecall
